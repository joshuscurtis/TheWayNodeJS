const {
  colors,
  CssBaseline,
  ThemeProvider,
  Typography,
  Container,
  Box,
  SvgIcon,
  Link,
  AppBar,
  Toolbar,
  MenuIcon,
  IconButton,
  Button,
  Grid,
  Card,
  CardContent,
  CardActions,
  CardHeader,
} = MaterialUI;

function CardApp(props) {
	var cardTitle = "Order: " + props.orderid;
	if (props.tablenum != null) {
		cardTitle = props.tablenum + " (Order: "+props.orderid+")";
	}
	var kitCol = "secondary"
	var barCol = "secondary"
	
	if(props.assignee == false) kitCol = "primary"
	if(props.assignee2 == false) barCol = "primary"
	
  return (
      <div style={{margin: 5,}}>
		<Card style={{backgroundColor: props.isprocessing ? '#d9534f' : '#5cb85c',}} variant="outlined">
			<CardHeader	title={cardTitle} subheader={props.time}>
			</CardHeader>
			<CardContent>
				<OrderItems itemNames={props.itemNames} order={props.order} />
			</CardContent>
			<CardActions>
        		<Button  variant="contained" color={kitCol} size="small">Kitchen</Button>
				<Button variant="contained" color={barCol} size="small">Bar</Button>
			</CardActions>
		</Card>
    </div>
  );
}

function ButtonAppBar() {

  return (
    <div>
      <AppBar position="static">
        <Toolbar>
			<Typography align="center" variant="h4" component="h1" gutterBottom>
		    	iOrders
			</Typography>
        </Toolbar>
      </AppBar>
    </div>
  );
}


function OrderItem(props) {

	
  return (
   <div>
    <Typography variant="h5" align="center">
		{props.itemName}
    </Typography>
	<Typography variant="h6" align="center">
		{props.varientName}
    </Typography>
	<Typography variant="h6" color="textSecondary" align="center">
		Qty: {props.qty}
	</Typography>
	</div>
  );
}

function OrderItems(props) {
	var order = props.order;
	console.log(order);
	var rows = [];
	for (var i = 0; i < order.products.length; i++) {
		if (order.products[i].name.substring(0,5) != "Table") {
    		rows.push(<OrderItem variantName={order.products[i].variantName} itemName={order.products[i].name} qty={order.products[i].quantity} />);
		}
	}
  return (
    <div>
		{rows}
	</div>
  );
}

function App() {
var aOrder = {"order_id":6900,"isnew":true,"products":[{"quantity":"1","productUuid":"c2658640-3f6d-11ea-bd77-77bec6607986","variantUuid":"c2675b00-3f6d-11ea-83b1-27700d29e89d","vatPercentage":0,"unitPrice":210,"rowTaxableAmount":210,"name":"Matt B Decaf Oat Latte","variantName":"","barcode":"","fromLocationUuid":"d7d1c49a-36c0-11ea-ac06-dbc3974b77ca","toLocationUuid":"d7d1c4ae-36c0-11ea-b8ca-c41d80aae161","autoGenerated":false,"id":"0","type":"PRODUCT","details":{},"libraryProduct":true}],"istable":false,"isprocessing":true,"isclosed":false,"assignee":null,"assignee2":null,"time":"1599037923125","closetime":"1599038969780"}

var bOrder = {"order_id":6902,"isnew":true,"products":[{"quantity":"1","productUuid":"a02b6920-bc70-11ea-b0b8-40811413df78","variantUuid":"a02c0560-bc70-11ea-ace3-322370f92477","vatPercentage":0,"unitPrice":0,"rowTaxableAmount":0,"name":"Table 7","description":"","barcode":"","autoGenerated":false,"id":"0","type":"PRODUCT","libraryProduct":true},{"quantity":"1","productUuid":"5b3518e0-3c53-11ea-aeb9-9304bbabbcff","variantUuid":"29559f40-3f67-11ea-b68e-d872fe59a498","vatPercentage":0,"unitPrice":180,"rowTaxableAmount":180,"name":"Latte","description":"","variantName":"","autoGenerated":false,"id":"1","type":"PRODUCT","libraryProduct":true},{"quantity":"2","productUuid":"e744ec40-48d1-11ea-b8e4-0c63221cd81e","variantUuid":"ff446aa0-48d1-11ea-85dd-c20c3cd3a2af","vatPercentage":0,"unitPrice":100,"rowTaxableAmount":200,"name":"Evelyn","description":"","variantName":"Black Am","autoGenerated":false,"id":"2","type":"PRODUCT","libraryProduct":true},{"quantity":"1","productUuid":"60fec560-3df6-11ea-b5c5-79a84ae64878","variantUuid":"73ed34f0-3e2c-11ea-beef-ffe40caae107","vatPercentage":0,"unitPrice":180,"rowTaxableAmount":180,"name":"Decaf Cappuccino","description":"","variantName":"None, Standard, 1 Shot","autoGenerated":false,"id":"3","type":"PRODUCT","libraryProduct":true}],"istable":true,"isprocessing":true,"isclosed":true,"assignee":null,"assignee2":false,"time":"1599038518505","closetime":"1599038992953","tablenum":"Table 10"}
	
  return (
      <div style={{ margin: 0, }}>
		<Container maxWidth="lg">
			<Grid container spacing={3}>
		        <Grid item xs={12}>
					<ButtonAppBar/>
		        </Grid>
		        <Grid item xs={6} spacing={3}>
		        	<Typography variant="h4" component="h1" gutterBottom>
		          		Left
			  		</Typography>
		        </Grid>
		        <Grid item xs={6} spacing={3}>
		        	<Typography variant="h4" component="h1" gutterBottom>
		          		Right
			  		</Typography>
					<CardApp 
						orderid={aOrder.order_id}
						order={aOrder} 
						time={aOrder.closetime}
						isprocessing={aOrder.isprocessing}
						istable={aOrder.istable}
						isnew={aOrder.isnew}
						isclosed={aOrder.isclosed}
					/>
					<CardApp 
						orderid={bOrder.order_id}
						order={bOrder} 
						time={bOrder.closetime}
						isprocessing={bOrder.isprocessing}
						istable={bOrder.istable}
						isnew={bOrder.isnew}
						isclosed={bOrder.isclosed}
						tablenum={bOrder.tablenum}
						assignee={bOrder.assignee}
						assignee2={bOrder.assignee2}
					/>
		        </Grid>
				<Grid item xs={12}>
			  	</Grid>
			</Grid>
  </Container>
</div>
  );}

ReactDOM.render(<App />, document.querySelector('#root'));